# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import calculator as module_0


@pytest.mark.xfail(strict=True)
def test_case_0():
    bytes_0 = b"\xebe\xa5P\xe7\x14\x85\xc3t\x92\x8a.\xbd\xcbLs"
    int_0 = 1700
    bool_0 = True
    calc_0 = module_0.Calc()
    var_0 = calc_0.divide(int_0, bool_0)
    assert var_0 == pytest.approx(1700.0, abs=0.01, rel=0.01)
    var_0.subtract(bytes_0, bytes_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    bool_0 = True
    none_type_0 = None
    int_0 = 1654
    bool_1 = False
    calc_0 = module_0.Calc()
    var_0 = calc_0.divide(int_0, bool_1)
    var_0.subtract(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_2():
    calc_0 = module_0.Calc()
    bool_0 = True
    calc_0.multiply(calc_0, bool_0)


@pytest.mark.xfail(strict=True)
def test_case_3():
    bool_0 = False
    none_type_0 = None
    bool_1 = True
    list_0 = []
    dict_0 = {}
    calc_0 = module_0.Calc(*list_0, **dict_0)
    var_0 = calc_0.add(bool_1, bool_1)
    assert var_0 == 2
    var_0.add(bool_0, none_type_0)


@pytest.mark.xfail(strict=True)
def test_case_4():
    calc_0 = module_0.Calc()
    bool_0 = False
    var_0 = calc_0.divide(bool_0, bool_0)
    calc_1 = module_0.Calc()
    int_0 = 1879
    bool_1 = True
    int_1 = 2795
    var_1 = calc_1.subtract(bool_1, int_1)
    assert var_1 == -2794
    bool_2 = False
    var_2 = calc_0.add(int_0, bool_2)
    var_3 = calc_0.multiply(bool_2, bool_0)
    assert var_3 == 0
    int_2 = 969
    bool_3 = False
    var_4 = calc_0.add(int_0, int_2)
    assert var_4 == 2848
    var_5 = calc_0.add(bool_3, int_2)
    assert var_5 == 969
    calc_2 = module_0.Calc()
    int_3 = -1787
    int_4 = -1453
    var_0.subtract(int_3, int_4)
