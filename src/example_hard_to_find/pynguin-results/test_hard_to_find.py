# Test cases automatically generated by Pynguin (https://www.pynguin.eu).
# Please check them before you use them.
import pytest
import hard_to_find as module_0


def test_case_0():
    int_0 = 6363
    hard_to_find_0 = module_0.HardToFind()
    var_0 = hard_to_find_0.hardmethod(int_0, int_0, int_0)


def test_case_1():
    int_0 = 6363
    hard_to_find_0 = module_0.HardToFind()
    var_0 = hard_to_find_0.easymethod(int_0, int_0, int_0)


def test_case_2():
    hard_to_find_0 = module_0.HardToFind()


def test_case_3():
    hard_to_find_0 = module_0.HardToFind()
    int_0 = 100000
    bool_0 = True
    var_0 = hard_to_find_0.hardmethod(int_0, bool_0, bool_0)


def test_case_4():
    int_0 = 6363
    hard_to_find_0 = module_0.HardToFind()
    int_1 = 100000
    var_0 = hard_to_find_0.easymethod(int_0, int_1, int_0)
    var_1 = hard_to_find_0.hardmethod(int_0, int_0, int_0)


def test_case_5():
    hard_to_find_0 = module_0.HardToFind()
    int_0 = 100000
    var_0 = hard_to_find_0.easymethod(int_0, int_0, hard_to_find_0)


def test_case_6():
    hard_to_find_0 = module_0.HardToFind()
    int_0 = 100000
    int_1 = -443
    var_0 = hard_to_find_0.hardmethod(int_0, int_0, int_1)
    var_1 = hard_to_find_0.hardmethod(int_0, var_0, var_0)


@pytest.mark.xfail(strict=True)
def test_case_7():
    int_0 = 6363
    hard_to_find_0 = module_0.HardToFind()
    int_1 = 1116
    var_0 = hard_to_find_0.easymethod(int_1, int_1, int_0)
    int_2 = 100000
    bool_0 = True
    var_1 = hard_to_find_0.easymethod(int_0, bool_0, int_2)
    var_2 = hard_to_find_0.hardmethod(int_0, int_2, hard_to_find_0)
    int_3 = 116
    int_4 = 1370
    var_3 = hard_to_find_0.hardmethod(int_2, int_0, int_4)
    int_5 = -737
    var_2.hardmethod(int_3, int_5, var_2)


def test_case_8():
    hard_to_find_0 = module_0.HardToFind()
    int_0 = 100000
    var_0 = hard_to_find_0.hardmethod(int_0, int_0, int_0)
    var_1 = hard_to_find_0.easymethod(int_0, int_0, hard_to_find_0)
